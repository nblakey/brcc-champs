---
import Button from "./ui/Button.astro";

type Props = {
    config: InformationConfig
}

const { config } = Astro.props;
---
<div class="flex flex-col m-7 pb-7 md:m-10 md:pb-10 gap-7">
    <div class="flex gap-4 md:gap-x-10 flex-wrap justify-center md:justify-normal">
        <Button id="comp" className="active">Competition Info</Button>
        <Button id="sched">Schedule</Button>
        {config.headerButtons.map((b) => (
            <Button href={b.href}>{b.text}</Button>
        ))}
    </div>
    <div id="info-comp">
        <div class="mb-7">
            <slot name="info" />
        </div>
        <div class="flex gap-4 md:gap-x-10 flex-wrap justify-center md:justify-normal">
            {config.nestedButtons.index0.map((b) => (
                <Button href={b.href}>{b.text}</Button>
            ))}
        </div>
    </div>
    <div id="info-sched" class="hidden">
        <slot name="schedule" />
    </div>
</div>
<script>
    let activeButton = 'comp';

    const getActiveButton = () => {
        return activeButton;
    }

    const setActiveButton = (active: string) => {
        activeButton = active;
    }

    class Button extends HTMLElement {
        connectedCallback() {
            const button = this.querySelector('button');
            const href = this.dataset.href;
            const id = this.dataset.id;

            if (href) {
                button?.addEventListener('click', () => {
                    window.open(href, '_blank');
                })
            } else if (id) {
                button?.addEventListener('click', () => {
                    if (id != getActiveButton()) {
                        document.querySelector(`[data-id=${getActiveButton()}]`)?.classList.remove('active');
                        document.getElementById(`info-${getActiveButton()}`)?.classList.add('hidden');
                        document.querySelector(`[data-id=${id}]`)?.classList.add('active');
                        document.getElementById(`info-${id}`)?.classList.remove('hidden');
                        setActiveButton(id);
                    }
                })
            }
        }
    }
    customElements.define('astro-button', Button);
</script>
<style>
    tr {
        white-space: nowrap;
    }
</style>
