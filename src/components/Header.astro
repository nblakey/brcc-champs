---
import { Image } from "astro:assets";
import Menu from "./Menu";

import brccLogo from '../images/brccLogo.png';
import Icons from "./Icons";

const year = new Date().getFullYear()

const { headerImage } = Astro.props;

---
<header id="header" class="fixed bg-white transition -translate-x-full z-50 lg:block lg:translate-x-0">
    <div class="relative flex flex-col h-screen w-screen md:w-[400px] shadow-right">
        <a href={headerImage.href} class="flex flex-none justify-center items-center h-40 w-full bg-primary">
            <Image alt={headerImage.alt} src={headerImage.src} densities={[2]} class="h-40 w-40" />
        </a>
        <div class="flex-auto">
            <Menu client:load />
        </div>
        <div class="flex flex-col gap-3 justify-center items-center pb-10">
            <div class="block md:hidden"><Image alt="Blue River Cross Country Course logo" src={brccLogo} densities={[2]} class="h-[62px] w-[95px]" /></div>
            <div class="hidden md:block"><Image alt="Blue River Cross Country Course logo" src={brccLogo} densities={[2]} class="h-[84px] w-[129px]"/></div>
            <span class="text-[10px] font-light">Â© {year} Blue River Cross Country Course</span>
            <div class="flex gap-2">
                <a href="https://www.facebook.com/bluerivercrosscountry" target="_blank" class="!pl-0"><Icons icon="Facebook" className="!w-6 !h-6 text-theme-secondary" /></a>
                <a href="https://twitter.com/bluerivercc" target="_blank" class="!pl-0"><Icons icon="Twitter" className="!w-6 !h-6 text-theme-secondary" /></a>
            </div>
        </div>
        <div id="menuCollapse" class="flex items-center justify-center hover:bg-[rgba(0,0,0,0.3)] hover:border hover:border-[rgba(0,0,0,0.4)] rounded-md lg:hidden absolute w-9 h-9 right-2 top-2">
            <Icons icon="Collapse" className="!w-8 !h-8 text-white" />
        </div>
    </div>
</header>
<!-- Placeholder to keep body content from going behind static header -->
<div class="hidden lg:block lg:relative lg:float-left">
    <div class="h-screen w-[400px]"></div>
</div>
<div class="lg:hidden fixed top-1 flex items-center bg-[#e4e4e4] shadow-right border border-gray-300 box-border rounded-r-md opacity-75 z-40">
    <div id="menuExpand" class="flex flex-col items-center justify-center rounded-md w-9 h-11 m-1">
        <Icons icon="Expand" className="!w-8 !h-8 text-black" />
        <span class="text-[9px]">Menu</span>
    </div>
    
</div>
<script>
    const toggleMenu = () => {
        if (document.getElementById('header')) {
            document.getElementById('header')!.classList.toggle('openMenu')
        }
    }

    const openMenu = () => {
        if (document.getElementById('header')) {
            document.getElementById('header')!.classList.add('openMenu')
        }
    }

    const closeMenu = () => {
        if (document.getElementById('header')) {
            document.getElementById('header')!.classList.remove('openMenu')
        }
    }

    window.addEventListener("message", (e) => {
        if (e.data.activePage && window.innerWidth < 1024) closeMenu()
        else if (e.data.action) {
            switch (e.data.action) {
                case 'close':
                    closeMenu()
                case 'open':
                    openMenu()
                case 'toggle':
                    toggleMenu()
            } 
        }
    })

    document.getElementById('menuExpand')?.addEventListener('click', openMenu)
    document.getElementById('menuCollapse')?.addEventListener('click', closeMenu)

</script>
<style>
    .openMenu {
        --tw-translate-x: 0px;
        transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    }
</style>
